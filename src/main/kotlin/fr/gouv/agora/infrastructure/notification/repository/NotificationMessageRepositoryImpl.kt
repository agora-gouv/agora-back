package fr.gouv.agora.infrastructure.notification.repository

import fr.gouv.agora.infrastructure.notification.dto.NotificationMessageDTO
import fr.gouv.agora.usecase.notification.repository.NotificationMessageRepository
import org.springframework.stereotype.Component

@Component
@Suppress("unused")
class NotificationMessageRepositoryImpl : NotificationMessageRepository {

    companion object {
        private const val QAG_REJECTED_TITLE = "Question hors Charte."
        private const val QAG_REJECTED_MESSAGE = "Malheureusement, votre question a du √™tre mod√©r√©e."

        private val QAG_ACCEPTED_NOTIFICATIONS = setOf(
            NotificationMessageDTO(
                title = "Et si vous partagiez votre question¬†?",
                message = "Proposez √† vos amis de la soutenir pour avoir plus de chance d‚Äôobtenir une r√©ponse¬†!"
            ),
            NotificationMessageDTO(
                title = "‚úÖ Question publi√©e",
                message = "Votre question est d√©sormais propos√©e √† tous les utilisateurs sur Agora."
            ),
            NotificationMessageDTO(
                title = "üôè Merci pour votre question¬†!",
                message = "Partagez-la √† vos amis pour la faire monter dans le classement."
            ),
            NotificationMessageDTO(
                title = "üëã Votre question est en ligne",
                message = "Faites-la conna√Ætre pour obtenir une r√©ponse."
            ),
            NotificationMessageDTO(
                title = "üóì Votre question sur Agora",
                message = "Elle est publi√©e. Vous avez jusqu‚Äô√† lundi pour la faire gagner¬†!"
            ),
            NotificationMessageDTO(
                title = "ü•≥ Votre question est en ligne",
                message = "Multipliez vos chances de la faire gagner en la partageant."
            ),
            NotificationMessageDTO(
                title = "‚úÖ Question publi√©e¬†!",
                message = "La r√©ponse pourrait int√©resser vos proches¬†? Partagez-leur pour augmenter vos chances."
            ),
            NotificationMessageDTO(
                title = "ü•Å Question publi√©e avec succ√®s",
                message = "Sera-t-elle en t√™te lundi √† 14h¬†? Proposez √† vos amis de la soutenir."
            ),
        )

        private const val QAG_ACCEPTED_AFTER_REJECT_TITLE = "Bonne nouvelle¬†!"
        private const val QAG_ACCEPTED_AFTER_REJECT_MESSAGE =
            "Votre question a √©t√© r√©-√©valu√©e et correspond √† la charte."
    }

    override fun getQagRejected(): NotificationMessageDTO {
        return NotificationMessageDTO(title = QAG_REJECTED_TITLE, message = QAG_REJECTED_MESSAGE)
    }

    override fun findAllByStatusAccepted(): Set<NotificationMessageDTO> {
        return QAG_ACCEPTED_NOTIFICATIONS
    }

    override fun getQagAcceptedAfterReject(): NotificationMessageDTO {
        return NotificationMessageDTO(
            title = QAG_ACCEPTED_AFTER_REJECT_TITLE,
            message = QAG_ACCEPTED_AFTER_REJECT_MESSAGE
        )
    }
}
